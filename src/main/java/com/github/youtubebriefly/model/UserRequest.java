package com.github.youtubebriefly.model;

import jakarta.persistence.*;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Null;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDateTime;
import java.util.UUID;

/**
 * Represents a user request, likely originating from a messaging platform like Telegram.
 * This entity captures the user's ID (from the messaging platform), the text of their request,
 * and the timestamp when the request was made.
 */
@Entity
@Table(name = "UserRequest")
@Data
@AllArgsConstructor
@NoArgsConstructor
public class UserRequest {

    /**
     * The unique identifier for this user request.
     * This is typically auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.UUID)
    private UUID id;

    /**
     * The user ID from the external messaging platform (e.g., Telegram).
     * This allows us to associate the request with a specific user.
     */
    @NotNull
    private Long userId;

    /**
     * The user language from the external messaging platform (e.g., Telegram).
     */
    private String language;

    /**
     * The chat ID from the external messaging platform (e.g., Telegram).
     * This allows us to associate the request with a specific chat.
     */
    @NotNull
    private Long chatId;

    /**
     * The message ID from the external messaging platform (e.g., Telegram).
     * This allows us to associate the request with a specific message.
     */
    @NotNull
    private Integer messageId;

    /**
     * The text content of the user's request.  This is the actual message sent by the user.
     */
    private String text;

    /**
     * The date and time when the user request was received.  This is important for tracking and analysis.
     */
    @NotNull
    private LocalDateTime requestedAt;

    /**
     * The date and time when the user request was proceed.  This is important for tracking and analysis.
     */
    @Null
    private LocalDateTime proceedAt;
}
